{
  "root": true,
  "env": {
    "browser": true,
    "node": true
  },
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module", 
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "settings": {
    "react": {
      "version": "detect"
    },     
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx"]
      }
    }
  }, 
  "plugins": [
    "react-refresh", 
    "react-redux", 
    "import"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:import/errors",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended", 
    "plugin:react-redux/recommended",
    "eslint-config-prettier"
  ],
  "rules": {
    "react-refresh/only-export-components": [
      "warn",
      {
        "allowConstantExport": true
      }
    ],
      // add plugin-node and plugin-jest?
      "react/prop-types": "off", // disable prop-types, we arent type checking, this could be an issue later on
      "react/jsx-uses-react": "off", // disables the rule that checks whether 'React' is in scope when using JSX
      "react/react-in-jsx-scope": "off", // ditto, dont need to manually import React in every component file 
      "import/no-unresolved": "off", // Doesn't recognize aliases, not sure how to fix this
      "import/no-commonjs":["warn"], // disallow CommonJS `require` and `module.exports` Should be using ES6 imports if can 
      "no-unused-vars": ["warn"], // warn unused variables,
      "no-undef": ["warn"], // warn undef variables 
      "no-const-assign": ["error"], // disallow reassigning const variables
      "no-var": ["error"], // require let or const instead of var
      "eqeqeq": ["error"], // require the use of === and !==, 
      "curly": ["error"], // enforce consistent brace style for all control statements
      "camelcase": ["error"] // enforce camelcase naming convention
  } 

}